// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    [Migration("20230916194304_rentAgreement")]
    partial class rentAgreement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DOL.Car", b =>
                {
                    b.Property<Guid>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailaible")
                        .HasColumnType("bit");

                    b.Property<string>("MakerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("CarId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("DOL.RentAgreement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RentDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalRentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RentAgreements");
                });

            modelBuilder.Entity("DOL.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "gopal@gmail.com",
                            FullName = "Gopal Goyal",
                            IsAdmin = false,
                            Password = "1234567890",
                            PhoneNumber = "1234567890",
                            Role = "User",
                            Token = ""
                        },
                        new
                        {
                            Id = 2,
                            Email = "ram@gmail.com",
                            FullName = "Ram Kumar",
                            IsAdmin = false,
                            Password = "1234567890",
                            PhoneNumber = "1234567890",
                            Role = "User",
                            Token = ""
                        },
                        new
                        {
                            Id = 3,
                            Email = "jatin@gmail.com",
                            FullName = "Jatin Sharma",
                            IsAdmin = false,
                            Password = "1234567890",
                            PhoneNumber = "1234567890",
                            Role = "User",
                            Token = ""
                        },
                        new
                        {
                            Id = 4,
                            Email = "admin@gmail.com",
                            FullName = "Admin1",
                            IsAdmin = true,
                            Password = "1234567890",
                            PhoneNumber = "1234567890",
                            Role = "Admin",
                            Token = ""
                        },
                        new
                        {
                            Id = 5,
                            Email = "admin2@gmail.com",
                            FullName = "Admin2",
                            IsAdmin = true,
                            Password = "1234567890",
                            PhoneNumber = "1234567890",
                            Role = "Admin",
                            Token = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
